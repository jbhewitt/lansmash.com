<?php
// $Id: google_auth.module,v 1.1.2.4 2008/11/08 18:39:57 cyberswat Exp $

/**
 * @file
 * The google auth module written for picasa interactions.  This module should
 * be modified to work generically but this has not happened due to the
 * complexity of getting the rest of Picasa to work within Drupal.
 */

 /**
  * Get the next url to pass to Google
  *
  * @return $url
  *   A string representing the current url
  */
function _google_auth_next() {
  $uri = request_uri();
  if (isset($_SERVER['HTTPS']) && strtolower($_SERVER['HTTPS']) == 'on') {
    $p = 'https://';
  }
  else {
    $p = 'http://';
  }
  $h = $_SERVER['HTTP_HOST'];
  $port = '';
  if ($_SERVER['SERVER_PORT'] != '' &&
    (($p == 'http://' && $_SERVER['SERVER_PORT'] != '80') ||
    ($p == 'https://' && $_SERVER['SERVER_PORT'] != '443'))) {
      $port .= ':'. $_SERVER['SERVER_PORT'];
  }
  $url = $p . $h . $port . $uri;
  return $url;
}

/**
  * Taken from the documentation at
  * http://code.google.com/apis/accounts/AuthForWebApps.html#AuthSubRequest
  * It is likely you will find a more up to date version of documentation there.
  *
  * Call AuthSubRequest to acquire single-use authentication. AuthSubRequest is
  * called as a URL; make a request to:
  * https://www.google.com/accounts/AuthSubRequest with the following query
  * parameters:
  *
  * @param array $data (required) Contains the url and session information.
  */
function _google_auth_sub_request($data) {
  $url = $data['url'];
  $url .= '?next='. drupal_urlencode($data['next']);
  $url .= '&scope='. drupal_urlencode($data['scope']);
  $url .= "&session=". $data['session'];

  if (!isset($_GET["token"])) {
    $url = str_replace( "http%3A/%252F", "http%3A//", $url);
    drupal_goto($url);
  }
  else {
    // exchange the single use token for a session token from Google
    $headers['Content-Type'] = 'application/x-www-form-urlencoded';
    $headers['Authorization'] = 'AuthSub token="'. $_GET["token"] .'"';
    $session_request = str_replace( "AuthSubRequest", "AuthSubSessionToken", $url);
    $session_exchange = drupal_http_request($session_request, $headers);
    if ($session_exchange->code == 200) {
      $token = str_replace('Token=', '', $session_exchange->data);
      $_SESSION['google_auth_token'] = trim($token);
      $msg = t("Your have authenticated with Google.");
      drupal_set_message($msg);
    }
    else {
      $msg = t("Authentication with Google has failed. Please try again.");
      watchdog('google_auth', 'google authentication error - '. print_r($session_exchange, TRUE));
      drupal_set_message($msg);
    }
  }
}

/**
  * Checks the request and responds accordingly
  */
function google_auth_request() {
  $data['scope'] = 'http://picasaweb.google.com/data/';
  $data['url'] = 'https://www.google.com/accounts/AuthSubRequest';
  $data["secure"] = 0;
  $data["session"] = 1;
  $data["next"] = _google_auth_next();
  _google_auth_sub_request($data);
}

/**
	* This method gets called when you need to associate a google account with a
	* Drupal action.
	*
	* @param $data
	*   An array of attributes for google_auth_request
	*/
function google_auth_required() {
  if (!isset($_SESSION['google_auth_token'])) {
    google_auth_request();
  }
}
