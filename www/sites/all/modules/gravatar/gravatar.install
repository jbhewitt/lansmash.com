<?php
// $Id: gravatar.install,v 1.1.4.12 2008/12/16 01:43:20 davereid Exp $

/**
 * @file
 * Install and uninstall schema and functions for the gravatar module.
 */

/**
 * Implementation of hook_schema().
 */
function gravatar_schema() {
  $schema['cache_gravatar'] = drupal_get_schema_unprocessed('system', 'cache');
  $schema['cache_gravatar']['description'] = t('Cache table for the Gravatar module to store already processed and cached images.');

  return $schema;
}

/**
 * Implementation of hook_install().
 */
function gravatar_install() {
  drupal_install_schema('gravatar');
}

/**
 * Implementation of hook_uninstall().
 */
function gravatar_uninstall() {
  drupal_uninstall_schema('gravatar');
  $variables = array_keys(gravatar_variables());
  foreach ($variables as $variable) {
    variable_del($variable);
  }
}

/**
 * Implementation of hook_requirements().
 */
function gravatar_requirements($phase) {
  $requirements = array();
  $notifications = array();

  if ($phase == 'runtime') {
    // Warn if picture support is disabled.
    if (!variable_get('user_pictures', 0) && user_access('administer users')) {
      $notificaitons = t('Make sure <a href="@user-settings-link">user picture support</a> is enabled to allow gravatar integration.', array('@user-settings-link' => url('admin/user/settings', array('fragment' => 'edit-user-pictures-0-wrapper'))));
    }

    // Warn if no user roles have access to the 'user gravatar' permission.
    $user_roles = user_roles(FALSE, 'use gravatar');
    if (empty($user_roles) && user_access('administer permissions')) {
      $notifications[] = t('There are no user roles that have the <a href="@permissions-link">%permission permission</a> assigned.', array('%permission' => t('use gravatar'), '@permissions-link' => url('admin/user/permissions', array('fragment' => 'module-gravatar'))));
    }

    // Warn if user pictures are not enabled in the theme.
    // @todo Stupid theme_get_settings generates errors on status report page.
    $theme_settings = theme_get_settings(variable_get('theme_default', 'garland'));
    if (!$theme_settings['toggle_comment_user_picture'] && !$theme_settings['toggle_node_user_picture'] && user_access('administer site configuration')) {
      $notifications[] = t('Make sure user pictures are enabled in your <a href="@theme-settings">theme</a> settings.', array('@theme-settings' => url('admin/build/themes/settings/'. $default_theme)));
    }

    // Warn if global default user picture is empty and used for default gravatar image.
    if (gravatar_var('default') == GRAVATAR_DEFAULT_GLOBAL && !variable_get('user_picture_default', '') && user_access('administer users')) {
      $notifications[] = t('You have selected the global default user picture for the default gravatar picture, but you have not specified a <a href="@user-picture-link">global default user picture</a>.', array('@user-picture-link' => url('admin/user/settings', array('fragment' => 'edit-user-picture-default'))));
    }

    // Warn if the global default user image exceeds the user picture dimensions.
    $info = image_get_info(variable_get('user_picture_default', ''));
    $dimensions = explode('x', variable_get('user_picture_dimensions', '85x85'));
    if ($info && ($info['width'] > $dimensions[0] || $info['height'] > $dimensions[1])) {
      $notifications[] = t('Your <a href="@user-picture-link">global default user picture</a> is too large and needs to be resized to @size pixels.', array('@user-picture-link' => url('admin/user/settings', array('fragment' => 'edit-user-picture-default')), '@size' => variable_get('user_picture_dimensions', '85x85')));
    }
  }

  if (!empty($notifications)) {
    $requirements['gravatar'] = array(
      'title' => t('Gravatar'),
      'value' => t('Potential issues'),
      'description' => theme('item_list', $notifications),
      'severity' => REQUIREMENT_WARNING,
    );
  }
  return $requirements;
}

/**
 * Variable and menu cleanup.
 */
function gravatar_update_6000() {
  // Integrate gravatar_defaulttype variable into the gravatar_imagedefault variable.
  if (variable_get('gravatar_imagedefault', 2) == 2) {
    $value = (int) variable_get('gravatar_default_type', 4);
    variable_set('gravatar_imagedefault', $value + 2);
    variable_del('gravatar_default_type');
  }

  // Rename gravatar_imagerating variable to gravatar_rating.
  if ($value = variable_get('gravatar_imagerating', FALSE)) {
    variable_set('gravatar_rating', $value);
    variable_del('gravatar_imagerating');
  }

  // Rename gravatar_imagedefault to gravatar_default.
  if ($value = variable_get('gravatar_imagedefault', FALSE)) {
    variable_set('gravatar_default', $value);
    variable_del('gravatar_imagedefault');
  }

  // Rename gravatar_displaysize to gravatar_size.
  if ($value = variable_get('gravatar_displaysize', FALSE)) {
    variable_set('gravatar_size', $value);
    variable_del('gravatar_displaysize');
  }

  // Install cache table.
  drupal_install_schema('gravatar');

  return array();
}
